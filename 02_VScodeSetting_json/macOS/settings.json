{
    // "clangd.arguments": [
    // "--compile-commands-dir=<path_to_directory_containing_compile_commands.json>"
    // ],
    // "clangd.path": "/Users/globalyoung/Library/Application Support/Code/User/globalStorage/llvm-vs-code-extensions.vscode-clangd/install/15.0.6/clangd_15.0.6/bin",
    // "zls.path": "/Users/globalyoung/Library/Application Support/Code/User/globalStorage/augusterame.zls-vscode/zls_install/zls",
    "zig.path": "/Users/gy-gyoung/Library/Application Support/Code/User/globalStorage/ziglang.vscode-zig/zig_install/zig",
    "zig.initialSetupDone": true,
    "zig.zls.path": "/Users/gy-gyoung/Library/Application Support/Code/User/globalStorage/ziglang.vscode-zig/zls_install/zls",
    // mojo
    "mojo.modularHomePath": "/Users/globalyoung/.modular",
    //  "workbench.colorTheme": "spacedark",
    "workbench.iconTheme": "material-icon-theme",
    "workbench.colorCustomizations": {
        "editorError.foreground": "#3f1010", // squiggly line
        "editorError.border": "#ffffff", // additional border under squiggly line
        "editorInlayHint.background": "#e85a5a98",
        "editorInlayHint.typeBackground": "#442b7a",
        // Overrides for specific kinds of inlay hints
        "editorInlayHint.typeForeground": "#fdb6fdf0",
        "editorInlayHint.parameterForeground": "#fdb6fdf0",
        "editorInlayHint": true
    },
    // JavaScript & TypeScript Inlayhint
    "javascript.inlayHints.enumMemberValues.enabled": true,
    "javascript.inlayHints.functionLikeReturnTypes.enabled": true,
    "javascript.inlayHints.parameterNames.enabled": "all",
    "javascript.inlayHints.parameterTypes.enabled": true,
    "javascript.inlayHints.propertyDeclarationTypes.enabled": true,
    "javascript.inlayHints.variableTypes.enabled": true, // recently
    "typescript.inlayHints.enumMemberValues.enabled": true,
    "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
    "typescript.inlayHints.parameterNames.enabled": "all",
    "typescript.inlayHints.parameterTypes.enabled": true,
    "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
    "typescript.inlayHints.variableTypes.enabled": true,
    // ~~~~~~~~~~~~~~
    "security.workspace.trust.untrustedFiles": "open",
    "fontFace": "Hack Nerd Font",
    "terminal.integrated.fontFamily": "Hack Nerd Font",
    "terminal.external.osxExec": "Warp.app",
    // auto fmt & format
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true,
    "editor.formatOnType": true,
    // "editor.defaultFormatter": "rvest.vs-code-prettier-eslint",
    "editor.formatOnSaveMode": "file", // required to format on save
    // ESlint
    // "eslint.format.enable": true,
    // "files.autoSave": "onFocusChange", // optional but recommended
    "vs-code-prettier-eslint.prettierLast": true,
    // Enable per-language(Prettier - Code formatter JS, TS)
    // code runner
    "code-runner.runInTerminal": true,
    // Controls the font family.
    //"editor.fontFamily": "Operator Mono",
    // Controls the line height. Use 0 to compute the lineHeight from the fontSize.
    // "editor.lineHeight": 0,
    // Enables font ligatures
    "editor.fontLigatures": true,
    // Controls if file decorations should use badges.
    "explorer.decorations.badges": false,
    "editor.fontSize": 25,
    "editor.tabSize": 4,
    "editor.insertSpaces": true,
    "editor.bracketPairColorization.enabled": true,
    "editor.guides.bracketPairs": "active",
    "editor.detectIndentation": true,
    "emmet.triggerExpansionOnTab": true,
    "editor.suggestSelection": "first",
    "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
    "terminal.integrated.inheritEnv": false,
    "terminal.integrated.fontSize": 25,
    "files.associations": {
        "*.html": "html",
        "*.rmd": "markdown"
    },
    "files.exclude": {
        "**/.classpath": true,
        "**/.project": true,
        "**/.settings": true,
        "**/.factorypath": true
    },
    // Tabbly AI <C-tab> Full Completion
    "tabby.keybindings": "tabby-style",
    // AI code Whisperer
    "tabnine.experimentalAutoImports": true,
    // AWS AI code Whsperer
    "aws.codeWhisperer.importRecommendation": true,
    "aws.codeWhisperer.javaCompilationOutput": "",
    "aws.codeWhisperer.shareCodeWhispererContentWithAWS": true,
    "aws.telemetry": true,
    // rust-analyzer setting~
    "rust-analyzer.inlayHints.enable": true,
    "rust-analyzer.cargo.loadOutDirsFromCheck": true,
    "rust-analyzer.procMacro.enable": true,
    "rust-analyzer.checkOnSave.command": "clippy",
    "rust-analyzer.procMacro.attributes.enable": true,
    // rust-yew 
    // "emmet.includeLanguages": {
    //   "rust": "html",
    // },
    // zig languages setting~
    "zls.warn_style": true,
    "zls.enable_semantic_tokens": false,
    "zls.operator_completions": true,
    "zls.include_at_in_builtins": false,
    "zls.enable_inlay_hints": true,
    // https://github.com/VSCodeVim/Vim
    // vim setting ~~~~
    "vim.leader": "<space>",
    "vim.useSystemClipboard": true,
    "editor.lineNumbers": "relative",
    "vim.easymotion": true,
    "vim.surround": true,
    "vim.insertModeKeyBindings": [
        {
            "before": [
                "j",
                "k"
            ],
            "after": [
                "<Esc>"
            ]
        }
    ],
    "vim.normalModeKeyBindings": [
        // {
        //     "before": [
        //         "<leader>",
        //         "s",
        //         "h"
        //     ],
        //     "after": {
        //         "command": [
        //             "workbench.action.createTerminalEditorSide"
        //         ]
        //     }
        // },
        {
            "before": [
                "K"
            ],
            "after": [
                "g",
                "h"
            ]
        },
        {
            "before": [
                "H"
            ],
            "after": [
                "g",
                "T"
            ]
        },
        {
            "before": [
                "L"
            ],
            "after": [
                "g",
                "t"
            ]
        },
        {
            "before": [
                "<leader>",
                ":"
            ],
            "commands": [
                "workbench.action.showCommands"
            ]
        },
        {
            "before": [
                "]",
                "d"
            ],
            "commands": [
                "editor.action.marker.nextInFiles"
            ]
        },
        {
            "before": [
                "[",
                "d"
            ],
            "commands": [
                "editor.action.marker.prevInFiles"
            ]
        },
        {
            "before": [
                "<leader>",
                "g",
                "a"
            ],
            "commands": [
                "editor.action.quickFix"
            ]
        },
        {
            "before": [
                "<leader>",
                "t"
            ],
            "commands": [
                "workbench.actions.view.problems"
            ]
        },
        {
            "before": [
                "<leader>",
                "r"
            ],
            "commands": [
                "editor.action.rename"
            ]
        },
        {
            "before": [
                "<leader>",
                "x"
            ],
            "commands": [
                "workbench.action.closePanel"
            ]
        },
        {
            "before": [
                "<leader>",
                "m"
            ],
            "commands": [
                "bookmarks.toggle"
            ]
        },
        {
            "before": [
                "<leader>",
                "s"
            ],
            "commands": [
                "workbench.action.gotoSymbol"
            ]
        },
        {
            "before": [
                "<leader>",
                "b"
            ],
            "commands": [
                "bookmarks.list"
            ]
        },
        {
            "before": [
                "<leader>",
                "e"
            ],
            "commands": [
                "calva.loadFile"
            ]
        }
    ],
    "vim.visualModeKeyBindings": [
        {
            "before": [
                ">"
            ],
            "commands": [
                "editor.action.indentLines"
            ]
        },
        {
            "before": [
                "<"
            ],
            "commands": [
                "editor.action.outdentLines"
            ]
        },
        {
            "before": [
                "K"
            ],
            "commands": [
                "editor.action.moveLinesUpAction"
            ]
        },
        {
            "before": [
                "J"
            ],
            "commands": [
                "editor.action.moveLinesDownAction"
            ]
        }
    ],
    "vim.handleKeys": {
        "<C-a>": true,
        "<C-b>": true,
        "<C-c>": false,
        "<C-d>": true,
        "<C-f>": true,
        "<C-h>": false,
        "<C-k>": false,
        "<C-r>": true,
        "<C-u>": false,
        "<C-v>": true,
        "<C-x>": true
    },
    // Unicode Setting
    "insert-unicode.favorites": {
        "directories": {},
        "items": [
            [
                8594
            ],
            [
                8469
            ],
            [
                8477
            ],
            [
                928
            ],
            [
                120121
            ],
            [
                8901
            ],
            [
                920
            ],
            [
                936
            ],
            [
                923
            ],
            [
                172
            ],
            [
                215
            ],
            [
                177
            ],
            [
                120793
            ]
        ]
    },
    // "[python]": {
    //   "editor.formatOnType": true
    // },
    // "[javascript]": {
    //   "editor.formatOnSave": true
    // },
    "yaml.customTags": [
        "!And",
        "!And sequence",
        "!If",
        "!If sequence",
        "!Not",
        "!Not sequence",
        "!Equals",
        "!Equals sequence",
        "!Or",
        "!Or sequence",
        "!FindInMap",
        "!FindInMap sequence",
        "!Base64",
        "!Join",
        "!Join sequence",
        "!Cidr",
        "!Ref",
        "!Sub",
        "!Sub sequence",
        "!GetAtt",
        "!GetAZs",
        "!ImportValue",
        "!ImportValue sequence",
        "!Select",
        "!Select sequence",
        "!Split",
        "!Split sequence"
    ],
    "window.zoomLevel": 1,
    "vim.digraphs": {},
    "haskell.manageHLS": "GHCup",
    "workbench.editor.empty.hint": "hidden",
    "workbench.sideBar.location": "right",
    // "tabby.experimental": {
    // },
    // "yaml.schemas": {
    //   "file:///Users/globalyoung/.vscode/extensions/atlassian.atlascode-3.0.3/resources/schemas/pipelines-schema.json": "bitbucket-pipelines.yml"
    // }
}