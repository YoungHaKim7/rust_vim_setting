theme = "solarized_dark"

[editor]
line-number = "relative"
mouse = false
color-modes = true
cursorline = true

[editor.indent-guides]
render = true
character = "â”Š"

[editor.lsp]
display-messages = true
# inlay hint #  :set lsp.display-inlay-hints false
display-inlay-hints = true


[editor.cursor-shape]
insert = "bar"
normal = "block"
select = "underline"

[editor.file-picker]
hidden = false

# At most one section each of 'keys.normal', 'keys.insert' and 'keys.select'
[keys.normal]
a = ["append_mode", "collapse_selection"]
# w = "move_line_up" # Maps the 'w' key move_line_up
g = { a = "code_action" }                                                                                                                                                                                                                                                                                                                                                                                # Maps `ga` to show possible code actions
C-a = "increment"
C-x = "decrement"
"backspace" = { c = ":sh cargo run" , t = ":sh cargo nextest run" , r = ":reload" , f = ":format" , s = ":w" , l = ":log-open" , g = ":sh gcc -Wall -Wextra -ggdb -o main main.c -lm" , d = ":sh rm -rf main main.dSYM" , n = ":sh echo $null >>.gitignore" , k = ":sh clang++ -Wall -Wetra -std=c++17 main.cpp -o main" , a = ":sh clang -pthread -lm -Wall -Wextra -ggdb -o main main.c" , x = ":sh chmod +x build.sh" }

# Muscle memory
"{" = ["goto_prev_paragraph", "collapse_selection"]
"}" = ["goto_next_paragraph", "collapse_selection"]
0 = "goto_line_start"
"$" = "goto_line_end"
"^" = "goto_first_nonwhitespace"
G = "goto_file_end"
"%" = "match_brackets"
V = ["select_mode", "extend_to_line_bounds"]
C = [
    "collapse_selection",
    "extend_to_line_end",
    "change_selection",
] # Requires https://github.com/helix-editor/helix/issues/2051#issuecomment-1140358950
D = ["extend_to_line_end", "delete_selection"]
S = [
    "goto_first_nonwhitespace",
    "collapse_selection",
    "extend_to_line_end",
    "change_selection",
] # Would be nice to be able to do something after this but it isn't chainable
s = ["delete_selection", "insert_mode"]

# Extend and select commands that expect a manual input can't be chained
# I've kept d[X] commands here because it's better to at least have the stuff you want to delete
# selected so that it's just a keystroke away to delete
d = { x = [
    "delete_selection",
], d = [
    "extend_to_line_bounds",
    "delete_selection",
], t = [
    "extend_till_char",
], s = [
    "surround_delete",
], S = [ 
    "surround_add"                                                   # Basically 99% of what I use vim-surround for
], i = [
    "select_textobject_inner",
], a = [
    "select_textobject_around",
] }

# Clipboards over registers ye ye
x = [
    "yank_main_selection_to_clipboard",
    "normal_mode",
    "flip_selections",
    "collapse_selection",
    "delete_selection",
]
p = "paste_clipboard_after"
P = "paste_clipboard_before"
# Would be nice to add ya and yi, but the surround commands can't be chained
y = [
    "yank_main_selection_to_clipboard",
    "normal_mode",
    "flip_selections",
    "collapse_selection",
]
Y = [
    "extend_to_line_bounds",
    "yank_main_selection_to_clipboard",
    "goto_line_start",
    "collapse_selection",
]

# Uncanny valley stuff, this makes w and b behave as they do Vim
w = ["move_next_word_start", "move_char_right", "collapse_selection"]
e = ["move_next_word_end", "collapse_selection"]
b = ["move_prev_word_start", "collapse_selection"]


[keys.insert]
j = { k = "normal_mode", space = "extend_line" } # Maps `jk` to exit insert mode

[keys.select]
# Muscle memory
"{" = ["extend_to_line_bounds", "goto_prev_paragraph"]
"}" = ["extend_to_line_bounds", "goto_next_paragraph"]
0 = "goto_line_start"
"$" = "goto_line_end"
"^" = "goto_first_nonwhitespace"
G = "goto_file_end"
D = ["extend_to_line_bounds", "delete_selection", "normal_mode"]
C = ["goto_line_start", "extend_to_line_bounds", "change_selection"]
"%" = "match_brackets"
# S = "surround_add"                                                   # Basically 99% of what I use vim-surround for

# Visual-mode specific muscle memory
i = "select_textobject_inner"
a = "select_textobject_around"
# x = "delete_selection"

# Some extra binds to allow us to insert/append in select mode because it's nice with multiple cursors
tab = [
    "insert_mode",
    "collapse_selection",
] # tab is read by most terminal editors as "C-i"
# C-a = ["append_mode", "collapse_selection"]

# Make selecting lines in visual mode behave sensibly
k = ["extend_line_up", "extend_to_line_bounds"]
j = ["extend_line_down", "extend_to_line_bounds"]

# Clipboards over registers ye ye
d = ["yank_main_selection_to_clipboard", "delete_selection"]
x = ["delete_selection"]
y = [
    "yank_main_selection_to_clipboard",
    "normal_mode",
    "flip_selections",
    "collapse_selection",
]
Y = [
    "extend_to_line_bounds",
    "yank_main_selection_to_clipboard",
    "goto_line_start",
    "collapse_selection",
    "normal_mode",
]
p = "replace_selections_with_clipboard" # No life without this
P = "paste_clipboard_before"

# Escape the madness! No more fighting with the cursor! Or with multiple cursors!
esc = ["collapse_selection", "keep_primary_selection", "normal_mode"]